name: Go

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
env:
  UPLOAD_BIN_FILE: true

jobs:

  build:
    name: Build
    strategy:
      matrix:
        go-version: [1.13.x]
        platform: [ windows-latest, ubuntu-latest, macos-latest]
        arch: [386, amd64]
    runs-on: ${{ matrix.platform }}
    steps:

    - name: Set up Go 1.13
      uses: actions/setup-go@v1
      with:
        GOARCH: ${{ matrix.arch }}
        go-version: ${{ matrix.go-version }}
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Build ${{ matrix.platform }} ${{ matrix.arch }}
      if: matrix.platform == 'ubuntu-latest' || matrix.platform == 'macos-latest'
      id: build_linux
      run: |
          ${GOROOT}/bin/go mod tidy
          export GOARCH=${{ matrix.arch }}
          echo "::set-env name=FATENAME::fate_$(go env GOOS)_$(go env GOARCH)"
          ${GOROOT}/bin/go build -o fate_$(go env GOOS)_$(go env GOARCH) -v ./cmd/console
          tar -zcvf fate_$(go env GOOS)_$(go env GOARCH).tar.gz ./fate_$(go env GOOS)_$(go env GOARCH)
 
    - name: Build ${{ matrix.platform }} ${{ matrix.arch }}
      if: matrix.platform == 'windows-latest'
      id: build_windows
      run: |
          ${GOROOT}\bin\go mod tidy
          set GOARCH=${{ matrix.arch }}
          echo "::set-env name=FATENAME::fate_$(go env GOOS)_$(go env GOARCH)"
          ${GOROOT}\bin\go build -o fate_$(go env GOOS)_$(go env GOARCH).exe -v ./cmd/console
          Compress-Archive -Path fate_$(go env GOOS)_$(go env GOARCH).exe -DestinationPath fate_$(go env GOOS)_$(go env GOARCH).zip
        
    - name: Upload Linux
      uses: actions/upload-artifact@master
      if: (matrix.platform == 'ubuntu-latest' || matrix.platform == 'macos-latest') && env.UPLOAD_BIN_FILE
      with:
        name: ${{ env.FATENAME }}.tar.gz
        path: ${{ env.FATENAME }}.tar.gz     

    - name: Upload Windows
      uses: actions/upload-artifact@master
      if: matrix.platform == 'windows-latest' && env.UPLOAD_BIN_FILE
      with:
        name: ${{ env.FATENAME }}.zip
        path: ${{ env.FATENAME }}.zip
